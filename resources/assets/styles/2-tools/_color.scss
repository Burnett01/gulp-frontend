/// Gets a color out of $options-map and can apply several color manipulations.
/// @param  {Color}   $key
/// @param  {ArgList} $callbacks...
/// @return {Color}
@function get-color($key, $callbacks...) {
  $color: null;
  $callback-function: null;
  $callbacks-length: length($callbacks);
  $color-map: get-option('color');

  // if $key is a color by itself and not in $color-map return $key
  // otherwise get the color from $color-map
  @if type-of($key) == color and not(map-has-key($color-map, $key)) {
    $color: $key;
  }

  @else {
    $color: map-get($color-map, $key);
  }

  // throw a warning if $key is neither a valid color
  // nor in the color map and stop prpagation
  @if type-of($color) == 'null' {
    @warn '#{$key} is neither a valid color nor in the color map.';
  }

  // check if any callbacks are set
  @else {
    @if $callbacks-length > 0 {

      // loop through callbacks
      @for $i from 1 through $callbacks-length {
        $callback: nth($callbacks, $i);
        $callback-args: ($color);
        $callback-length: length($callback);

        // check if there are any more args for the callback
        @if $callback-length > 1 {
          $callback-function: nth($callback, 1);

          // append args to the callback list
          @for $n from 2 through $callback-length {
            $callback-args: append($callback-args, nth($callback, $n));
          }
        }

        // if $callback-length is 1 then there is
        // only a function without any more args
        @else {
          $callback-function: $callback;
        }

        // call function
        $color: call($callback-function, $callback-args...);
      }
    }
  }

  // return the color
  @return $color;
}

/// Shorthand for get-color()
@function c($key, $callbacks...) {
  @return get-color($key, $callbacks...);
}

// TODO: Add description
@function tint($color, $amount) {
  @return mix(white, $color, $amount);
}

// TODO: Add description
@function shade($color, $amount) {
  @return mix(black, $color, $amount);
}

// TODO: Add description
@function opacity($color, $amount) {
  @return transparentize($color, (1 - $amount));
}
